upstream tomcats {
##server 192.168.1.118:8080 max_conns=2
##一个tomact最大的连接数量。这个需要配合nginx.conf中的worker_processes的数量一起来测试;

##server 192.168.1.118:8080 weight=6 slow_start=60s
##slow_start在商业版中才会使用。每一个server默认的权重是1，slow_start=60s表示60秒之后当前配置的server的权重会达到6

##server 192.168.1.118:8080 down;
##server 192.168.1.118:8080 backup;
##down:表示当前server下线
##backup:表示当前server为备用机，只有在其他server不可用的时候才会使用起来。

##server 192.168.1.118:8080 max_fail=2 fail_timeout=10s;
##max_fails=number 设定Nginx与服务器通信的尝试失败的次数。
##在fail_timeout参数定义的时间段内，如果失败的次数达到此值，Nginx就认为服务器不可用。
##在下一个fail_timeout时间段，服务器不会再被尝试

        server 192.168.1.118:8080;
        server 192.168.1.119:8080;
        server 192.168.1.120:8080;
## keepalive 是保持长连接的个数。配合单台机器可以明显的测试出，能提高server的吞吐量
        keepalive 32;
        #ip_hash;
##ip_hash 对访问的ip取hash值在除server的数量来取模，得到需要路由到server的机器号码
        #hash $request_uri;
## hash $request_uri; 配置url_hash算法
        #least_conn
## 每次访问连接数最小的server

}
#proxy_cache_path 设置nginx对server中的静态资源的缓存目录
#keys_zone 设置共享空间以及占用空间的大小
#max_size 设置缓存的最大值
#inactive 超过此事件，则清理缓存
#use_temp_path 关闭临时目录
# 当开启这个静态资源的缓存的时候 就一直会在有效时间内访问缓存。如果这个时候想做负载均衡相关参数的设置 那就不方便查看了。
#若要测试要么吧inactive时间改的很短要么关闭这功能
proxy_cache_path  /usr/local/nginx/upstream_cache keys_zone=mycache:10m max_size=1g inactive=3s use_temp_path=off;

server {
    listen       80;
    server_name  www.tomcats.com;
    #server_name  192.168.1.122; #可以配合upstream中的ip_hash来测试nginx的ip_hash算法

    #开启并使用缓存
    proxy_cache mycache;
    #针对200,304状态码的缓存设置过期时间,
    proxy_cache_valid 200 304 5s;

    location / {
        proxy_pass http://tomcats;
        proxy_http_version 1.1;#1.1为长连接的版本号
        proxy_set_header Connection "";
    }
}
#静态访问资源配置
server {
    listen       90;
    server_name  localhost;

    location / {
        proxy_pass http://gitee.com;
    }

    location /static {
         alias  /home/imooc;
         #expires 10s; 控制浏览器在10s对于static中的资源请求，都不会请求到后台服务器中，而是访问浏览器中的缓存
          #https://www.cnblogs.com/Jackie-Chen/articles/10640802.html
    }
}
