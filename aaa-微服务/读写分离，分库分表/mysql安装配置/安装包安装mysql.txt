1.详细描安装的过程
1.1关闭防火墙
systemctl stop firewalld.service #停止firewall
systemctl disable firewalld.service #禁止firewall开机启动
firewall-cmd --state #查看默认防火墙状态（关闭后显示notrunning，开启后显示running）
1.2 检查是否安装ySQL,如果安装 卸载之
rpm -qa |grep mysql
yum -y remove mysql*
1.3 检查是否安装MariaDB,如果安装 卸载之(重要)
rpm -qa |grep mariadb
yum -y remove mariadb*
1.4 新增用户/组 参数文件,也可以不创建mysql用户组使用root用户
groupadd mysql
useradd -d /home/mysql -g mysql -m mysql
passwd mysql
mysql

进入myql包所在的目录
1 解压
tar -xzvf mysql-5.7.22-el7-x86_64.tar.gz
2.解压后移动到根目录
mv  ./mysql-5.7.22-el7-x86_64 /mysql-5.7.22

3.规划目录
mkdir -p /usr/local/mysql/my3306/data
mkdir -p /usr/local/mysql/my3306/logs/iblog
mkdir -p /usr/local/mysql/my3306/logs/binlog
mkdir -p /usr/local/mysql/my3306/run
mkdir -p /usr/local/mysql/my3306/tmp
3.1赋权限;对于mysql用户组赋予权限 么有创建mysql用户组的就不需要赋权
chown -R mysql:mysql /usr/local/mysql/my3306
chown -R mysql:mysql /mysql-5.7.22
##chown -R 755 /usr/local/mysql/my3306

--- 环境变量
vim ~/.bash_profile
注意:下面路径中红色为新增的部分,你只需要在原来的PATH后面添加
$HOME/bin:/mysql-5.7.22/bin
就可以了,不然mysqld这个命令是无法使用的

-- 使变量生效
source ~/.bash_profile

1.9初始化数据库
mysqld --initialize --user=root --basedir=/mysql-5.7.22  --datadir=/usr/local/mysql/my3306/data  --explicit_defaults_for_timestamp

2018-05-14T05:52:52.741612Z 0 [Warning] Changed limits: max_open_files: 1024 (requested 5000)
2018-05-14T05:52:52.742026Z 0 [Warning] Changed limits: table_open_cache: 431 (requested 2000)
2018-05-14T05:52:53.946033Z 0 [Warning] InnoDB: New log files created, LSN=45790
2018-05-14T05:52:54.104581Z 0 [Warning] InnoDB: Creating foreign key constraint system tables.
2018-05-14T05:52:54.201291Z 0 [Warning] No existing UUID has been found, so we assume that this is the first time that this server has been started. Generating a new UUID: 0b79b507-573b-11e8-89dd-000c29a1762c.
2018-05-14T05:52:54.203218Z 0 [Warning] Gtid table is not ready to be used. Table 'mysql.gtid_executed' cannot be opened.
2018-05-14T05:52:54.210927Z 1 [Note] A temporary password is generated for root@localhost: ;c_tca9sR;s5
由上可知,初始化的root 密码为;c_tca9sR;s5

%th(:>;Te7dy

1.10编辑参数文件 my.cnf 文件中的目录视自己的实际情况修改一下
vim /mysql-5.7.22/my.cnf

[mysqld]
#sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES
basedir=/mysql-5.7.22                             #介质目录
datadir =/usr/local/mysql/my3306/data                         #数据目录
port=3306                                         		 #端口
pid-file =/usr/local/mysql/my3306/data/mysql.pid            #进程id
#启动用户 注意！！！
user = mysql
socket=/usr/local/mysql/my3306/run/mysql.sock                #sock文件地址
bind-address = 0.0.0.0                             	#绑定ip 这里表示绑定所有ip
server-id = 1                                     		 #用于复制环境钟标识实例,这个在复制环境里唯一
character-set-server = utf8mb4                        #服务端默认字符集,很重要,错误设置会出现乱码
max_connections = 1000                             #允许客户端并发连接的最大数量
max_connect_errors = 6000                          #如果客户端尝试连接的错误数量超过这个参数设置的值，则服务器不再接受新的客户端连接。
open_files_limit = 65535                           #操作系统允许MySQL服务打开的文件数量。
table_open_cache = 128                             #所有线程能打开的表的数量
max_allowed_packet = 4M                            #网络传输时单个数据包的大小。
binlog_cache_size = 1M
max_heap_table_size = 8M
tmp_table_size = 16M
read_buffer_size = 2M
read_rnd_buffer_size = 8M
sort_buffer_size = 8M
join_buffer_size = 8M
key_buffer_size = 4M
thread_cache_size = 8
query_cache_type = 1
query_cache_size = 8M
query_cache_limit = 2M
ft_min_word_len = 4
log_bin = /usr/local/mysql/my3306/logs/binlog      		#binlog存储目录
log_bin_index = /usr/local/mysql/my3306/logs/binlog.index
binlog_format = mixed
expire_logs_days = 30                       # 配置定期清理
log_error = /usr/local/mysql/my3306/logs/mysql-error.log
slow_query_log = 1
long_query_time = 1
slow_query_log_file = /usr/local/mysql/my3306/logs/mysql-slow.log
performance_schema = 0
explicit_defaults_for_timestamp
#lower_case_table_names = 1
skip-external-locking
default_storage_engine = InnoDB
innodb_file_per_table = 1
innodb_open_files = 500
innodb_buffer_pool_size = 64M
innodb_write_io_threads = 4
innodb_read_io_threads = 4
innodb_thread_concurrency = 0
innodb_purge_threads = 1
innodb_flush_log_at_trx_commit = 2
innodb_log_buffer_size = 2M
innodb_log_file_size = 32M
innodb_log_files_in_group = 3
innodb_max_dirty_pages_pct = 90
innodb_lock_wait_timeout = 120
bulk_insert_buffer_size = 8M
myisam_sort_buffer_size = 8M
myisam_max_sort_file_size = 10G
myisam_repair_threads = 1
interactive_timeout = 28800
wait_timeout = 28800

[client]
port=3306
socket=/usr/local/mysql/my3306/run/mysql.sock
[mysql]
socket=/usr/local/mysql/my3306/run/mysql.sock




1.11拷贝my.cnf 以及 mysql.server
cp /mysql-5.7.22/my.cnf /etc/my.cnf
cp /mysql-5.7.22/support-files/mysql.server /etc/init.d/mysqld
1.12编辑
vim /etc/init.d/mysqld
#添加一下两项
basedir=/mysql-5.7.22
datadir=/usr/local/mysql/my3306/data

1.13.启动数据库
[mysql@localhost ~]$ service mysqld start
Starting MySQL.. SUCCESS!
1.14.连接数据库 更新初始密码
这里注意如果用mysql用户登录不了,那就使用root用户登录
[mysql@localhost ~]$ mysql -uroot -p
Enter password:

mysql> show databases;
这是修改root的密码，不用这个就百度一下;
方式一：alter user 'root'@'localhost' identified by 'rootroot';
方式二：update mysql.user set authentication_string=password("rootroot"),Host="localhost" where User="root";
Query OK, 0 rows affected, 1 warning (0.03 sec)
授权远程登录：
grant all privileges on *.* to 'root'@'%' identified by 'rootroot' with grant option;
mysql> flush privileges;
然后重启就能用新密码登录了;
1.15.配置mysql开机启动
[root@localhost ~]# chkconfig mysqld on
[root@localhost ~]# chkconfig

Note: This output shows SysV services only and does not include native
      systemd services. SysV configuration data might be overridden by native
      systemd configuration.

      If you want to list systemd services use 'systemctl list-unit-files'.
      To see services enabled on particular target use
      'systemctl list-dependencies [target]'.

mysqld          0:off   1:off   2:on    3:on    4:on    5:on    6:off
netconsole      0:off   1:off   2:off   3:off   4:off   5:off   6:off
network         0:off   1:off   2:on    3:on    4:on    5:on    6:off